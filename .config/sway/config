# @dotfile
# Variables {{{1
set $mod Mod4
set $alt Mod1
set $term $TERMINAL
set $browser $BROWSER
set $lock ~/.scripts/sway/lock
set $power ~/.config/rofi/modi/power
set $wifi ~/.config/rofi/modi/nmcli
set $menu rofi -show drun
set $screenclip ~/.scripts/sway/screenshot --select --edit

# colors {{{2
set $cl_high #009ddc
set $cl_indi #d9d8d8
set $cl_back #231f20
set $cl_fore #d9d8d8
set $cl_urge #ee2e24

# workspaces {{{2
set $ws1 1:1
set $ws2 2:2
set $ws3 3:3
set $ws4 4:4
set $ws5 5:5
set $ws6 6:6
set $ws7 7:7
set $ws8 8:8
set $ws9 9:9
set $ws0 10:10

# Looks and feel {{{1
# Colors                border   bg       text     indi     childborder
client.focused          $cl_high $cl_high $cl_fore $cl_indi $cl_high
client.focused_inactive $cl_back $cl_back $cl_fore $cl_back $cl_back
client.unfocused        $cl_back $cl_back $cl_fore $cl_back $cl_back
client.urgent           $cl_urge $cl_urge $cl_fore $cl_urge $cl_urge

# Font
font pango:Sans 12

# Window borders
default_border none
# default_floating_border normal
# hide_edge_borders smart

floating_modifier $mod
bindsym $mod+Tab workspace back_and_forth
bindsym $alt+Tab workspace next
bindsym $mod+$alt+Tab workspace prev

# Autostart {{{1
exec --no-startup-id mako
# if no clipman:
# service:  wl-paste -w wl-paste -p >> /tmp/a
# menu:     tac /tmp/a | rofi -dmenu | wl-copy
exec wl-paste -t text --watch clipman store
# @dottodo https://github.com/francma/wob
bindsym $mod+c exec clipman pick
exec riot
# exec --no-startup-id pcloud
# exec --no-startup-id libinput-gestures

# Input configuration {{{1
# https://manpages.debian.org/experimental/sway/sway-input.5.en.html
input * {
    pointer_accel 0.35
    repeat_delay 275
    repeat_rate 50
    # additional escape
    xkb_options caps:escape
    tap enabled
    natural_scroll enabled
    scroll_method two_finger
    # disable while typing
    dwt enabled
}

# Shortcuts {{{1
bindsym $mod+Return exec $term
bindsym $mod+F11 exec $screenclip
bindsym $mod+d exec $menu

bindsym $mod+Shift+q kill
bindsym $mod+Shift+c reload
bindsym $mod+b splith
bindsym $mod+v splitv

bindsym $mod+Escape exec $power
bindsym $mod+End exec $wifi

bindsym $mod+w exec $browser

# Notifications {{{1
bindsym Control+Space exec makoctl dismiss
# bindsym Control+Shift+Space exec makoctl dismiss --all

# FunctionKeys {{{1
bindsym --locked XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume $(pacmd list-sinks |awk '/* index:/{print $3}') +5%
bindsym --locked XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume $(pacmd list-sinks |awk '/* index:/{print $3}') -5%
bindsym --locked XF86AudioMute exec --no-startup-id pactl set-sink-mute $(pacmd list-sinks |awk '/* index:/{print $3}') toggle
bindsym --locked XF86MonBrightnessUp exec --no-startup-id sudo brightnessctl set 5%+
bindsym --locked XF86MonBrightnessDown exec --no-startup-id sudo brightnessctl set 5%-

# Toggle Redshift {{{1
bindsym $mod+Home exec --no-startup-id pkill -USR1 redshift

# Idle configuration {{{1
# @dottodo Broken swayidle
# exec swayidle \
#     timeout 300 'exec $loswayidleck' \
#     timeout 600 'swaymsg "output * dpms off"' \
#     after-resume 'swaymsg "output * dpms on"' \
#     before-sleep 'exec $lock'

# FOCUS, RESIZE, MOVE {{{1
# FOCUS {{{2
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# RESIZE {{{2
bindsym $mod+Control+h resize shrink width 30px
bindsym $mod+Control+j resize shrink height 30px
bindsym $mod+Control+k resize grow height 30px
bindsym $mod+Control+l resize grow width 30px

bindsym $mod+Control+Left resize shrink width 30px
bindsym $mod+Control+Down resize shrink height 30px
bindsym $mod+Control+Up resize grow height 30px
bindsym $mod+Control+Right resize grow width 30px

workspace_auto_back_and_forth yes

# MOVE {{{2
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# FLOAT BECAUSE OF TITLE {{{2
for_window [title="Volume Control"] floating enable
for_window [title="wttr.in"] floating enable;resize set width 1200px;resize set height 900px

# switch to workspace {{{1
bindsym $mod+1   workspace $ws1
bindsym $mod+2   workspace $ws2
bindsym $mod+3   workspace $ws3
bindsym $mod+4   workspace $ws4
bindsym $mod+5   workspace $ws5
bindsym $mod+6   workspace $ws6
bindsym $mod+7   workspace $ws7
bindsym $mod+8   workspace $ws8
bindsym $mod+9   workspace $ws9
bindsym $mod+0   workspace $ws0

# move focused container to workspace
bindsym $mod+Shift+1    move container to workspace $ws1
bindsym $mod+Shift+2    move container to workspace $ws2
bindsym $mod+Shift+3    move container to workspace $ws3
bindsym $mod+Shift+4    move container to workspace $ws4
bindsym $mod+Shift+5    move container to workspace $ws5
bindsym $mod+Shift+6    move container to workspace $ws6
bindsym $mod+Shift+7    move container to workspace $ws7
bindsym $mod+Shift+8    move container to workspace $ws8
bindsym $mod+Shift+9    move container to workspace $ws9
bindsym $mod+Shift+0    move container to workspace $ws0

# Layout stuff: {{{1
# Switch the current container between different layout styles
bindsym $mod+Shift+s layout stacking
bindsym $mod+Shift+w layout tabbed
bindsym $mod+Shift+e layout toggle split
# Make the current focus fullscreen
bindsym $mod+f fullscreen
# Toggle the current focus between tiling and floating mode
bindsym $mod+Shift+space floating toggle
# Swap focus between the tiling area and the floating area
bindsym $mod+space focus mode_toggle
bindsym $mod+o sticky toggle

bindsym $mod+Shift+x exec $lock

# move focus to the parent container
bindsym $mod+a focus parent

# Move the currently focused window to the scratchpad
bindsym $mod+Shift+minus move scratchpad
# Show the next scratchpad window or hide the focused scratchpad window.
# If there are multiple scratchpad windows, this command cycles through them.
bindsym $mod+minus scratchpad show


set $mode_system System: (l) lock, (e) logout, (s) suspend, (r) reboot, (S) shutdown, (R) UEFI
mode "$mode_system" {
    bindsym l exec $lock, mode "default"
    bindsym e exit
    bindsym s exec --no-startup-id $lock && systemctl suspend, mode "default"
    bindsym r exec --no-startup-id systemctl reboot, mode "default"
    bindsym Shift+s exec --no-startup-id systemctl poweroff -i, mode "default"
    bindsym Shift+r exec --no-startup-id systemctl reboot --firmware-setup, mode "default"

    # return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+Shift+Return mode "$mode_system"
# @dotdoc-keybindings `mod+F12` to cycle through available keyboard layouts.
bindsym $mod+F12 exec keyboard-layout next; pkill -SIGRTMIN+8 waybar

exec_always ~/.config/waybar/waybar.sh

# vim: fdm=marker ft=sh
