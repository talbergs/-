#!/bin/bash
#| accepts optional argument 'api_tests' or 'selenium_tests'
[[ $1 == -h ]] && grep '^#|' $0 | sed 's/^#//' && exit

TICKET=$(zbx.resolve.branch)
[[ -z $TICKET ]] && echo "$(basename $1) not in path that resolves to ticket: $PWD" && exit 1

if [[ ! -f $(zbx.resolve.base)/database/mysql/schema.sql ]]; then
    echo "<< making schema"
    (
        make clean
        ./bootstrap.sh
        ./configure
        make dbschema
    )>/dev/null
fi

cd $(zbx.resolve.base)

echo "<< database '$TICKET' user 'zabbix' pass 'zabbix'" && (
    echo "drop database \`${TICKET}\`;" | mysql -uroot
    echo "create database \`${TICKET}\` character set utf8 collate utf8_bin;" | mysql -uroot
    echo "grant all privileges on \`${TICKET}\`.* to zabbix@localhost identified by 'zabbix';" | mysql -uroot
)>/dev/null

echo "<< schema,data" && (
    mysql -uroot -D $TICKET < database/mysql/schema.sql
    mysql -uroot -D $TICKET < database/mysql/images.sql
    mysql -uroot -D $TICKET < database/mysql/data.sql
)>/dev/null

cd $(zbx.resolve.base)

if [[ -z $_ ]]; then
    echo "could not resolve base, maybe ticket branch name format is not supported" && exit 1
fi

if [[ $1 == api_tests ]]; then
    echo "<< test-data" && (
        mysql -uroot -D $TICKET < frontends/php/tests/api_json/data/data_test.sql
    )>/dev/null
elif [[ $1 == selenium_tests ]]; then
    echo "<< test-data" && (
        mysql -uroot -D $TICKET < frontends/php/tests/selenium/data/data_test.sql
    )>/dev/null
fi
