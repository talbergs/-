#!/bin/bash

## By default echoes env file path.
## Env file sample is maintained within this script.
## Typical usage in scripts:
## _$ zbx.env && source $(zbx.env) || exit 1
[[ $1 == -h ]] && zbx.-h "$0" && exit

env_file_path=$HOME/.zbx.env

defaults() {
    p='env_file_template'
    cat $0 | sed "/{{$p}}/,\$!d"
}
write() {
    defaults > $env_file_path
    echo "Written: ${env_file_path}"
}

while [[ $# > 0 ]];do case $1 in
#- Exits 0 or 1 if file not found.
--exists) [ ! -f $env_file_path ] && exit 1; exit 0;;
#- Writes default into env file.
--write) write; exit 0;;
#- Writes default into env file.
--cat-defaults) echo "$(defaults)"; exit 0;;
esac;shift;done

ex=$($0 --exists)
[[ $ex -eq 0 ]] && echo -n "$env_file_path" || echo "File not found: ${env_file_path}"
exit $ex

# {{env_file_template}}
# For testing fresh.
HOME=/tmp

zbx_sessions_dir=$HOME/Projects/zabbix/vim-sessions
# Contains file for a session. File name is namespaced only by branch name: feature/ZBX-123-4.0.vim
# Contains vim undofile. File name is namespaced only by branch name: feature/ZBX-123-4.0.undofile.vim

zbx_build_dir=$HOME/Projects/zabbix/builds
# Such folder will have zabbix sender, zabbix server, schema latest builds on git pull
# builds will happen in background, database will be created only if not existed.
# $HOME/Projects/zabbix/builds/relese/4.0
# $HOME/Projects/zabbix/builds/feature/ZBX-123-4.0
# $HOME/Projects/zabbix/builds/master

zbx_master_dir=$HOME/Projects/zabbix/master
# This folder will have .git folder, others versions will use git-worktree respectively.

zbx_release_dir=$HOME/Projects/zabbix/release
# Folder is checked out at any feature branch.

zbx_feature_dir=$HOME/Projects/zabbix/feature
# Folder has subfolders checked out to stable release branch.

zbx_remote_url=ssh://git@git.zabbix.lan:7999/zbx/zabbix.git
zbx_remote_url=$HOME/zabbix.git
# Remote url.

zbx_remote_name=origin
zbx_upstream_remote=origin
# Conventional name to use.

# Common auto setup.
mkdir -p $zbx_sessions_dir
mkdir -p $zbx_build_dir
mkdir -p $zbx_master_dir
mkdir -p $zbx_release_dir
mkdir -p $zbx_feature_dir
