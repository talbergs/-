#!/bin/bash
## Shows diff in vim, meanwhile keeping all the patches timestamped and somewhere safe.
## Available parameters explained:
#- {no flags} current diff (not commited)
[[ $1 == -h ]] && grep '^#|' $0 | sed 's/^#//' && exit

tmp=$(mktemp)
exec 9<>$tmp
while [[ "$#" > 0 ]]; do case $1 in
    #- quietly just gives patch filename
    -q|--quite) quite=1;;
    #- quietly just gives patch filename
    -s|--stdout) stdout=1;;
    #- absolute diff including uncommited, since the fork
    -a|--absolute) (svn=1
        svn diff -r $(svn log --stop-on-copy | tail -n 4 | head -n 1 | awk '{print $1}') >&9
    );;
    #- same as "-a", but without uncommited changes
    -c|--commits) (svn=1
        echo "todo" >&9
    );;
    #- only files that were changed
    -f|--files) (svn=1
        svn diff --summarize -r $(svn log --stop-on-copy | tail -n 4 | head -n 1 | awk '{print $1}') \
        | awk '{print $2}' >&9
    );;
    #- only commited diffs with commit messages
    -l|--lateral) (svn=1
        svn log --stop-on-copy --diff >&9
    );;
    *) echo "Unknown parameter passed: $1"; exit 1;;
esac; shift; done
[[ -z $svn ]] && svn diff >&9
exec 9<&-

FILE=$(printf "/tmp/%s_%s_%s.diff" \
    "$(zbx.resolve.branch)" \
    "r$(svn info | grep Revi | awk '{print $2}')" \
    "$(date '+%Y-%d-%m_%H:%M:%S')")
mv $tmp $FILE

[[ ! -z $quite ]] && echo -n $FILE && exit
[[ ! -z $stdout ]] && cat $FILE && exit
[[ -s $FILE ]] && $EDITOR "$FILE" || echo "No diff."

# vim: set syntax=sh
